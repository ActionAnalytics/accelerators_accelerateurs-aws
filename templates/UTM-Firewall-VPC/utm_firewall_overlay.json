{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata" : {
      "AWS::CloudFormation::Interface" : {
        "ParameterGroups" : [
          {
            "Label" : { "default" : "UTM Firewall Network Security VPC Template S3 Bucket Config" },
            "Parameters" : [ "TemplatesS3BucketName", "TemplatesS3BucketPath" ]
          },
          {
            "Label" : { "default":"UTM Firewall Network Security VPC CIDR block Config" },
            "Parameters" : [ "networkSecurityVpcCidr", "firewallManagementInterfaceSubnetCidr", "firewallUntrustInterfaceSubnetCidr", "firewallTrustInterfaceSubnetCidr", "firewallManagementGatewaySubnetCidr", "transitGatewayAttachmentSubnetCidr" ]
          },
          {
            "Label" : { "default" : "UTM Firewall Network Security VPC Transit Gateway Attachment Config" },
            "Parameters" : [ "transitGatewayId", "spokeVPCCidrs" ]
          },
          {
            "Label" : { "default" : "UTM Firewall Network Security AMI Config" },
            "Parameters" : [ "utmFirewallAMIId", "firewallManagementBastionAMIId" ]
          }
        ],
        "ParameterLabels" : {
          "TemplatesS3BucketName" : { "default" : "S3 bucket name for templates:" },
          "TemplatesS3BucketPath" : { "default" : "S3 bucket prefix for templates:" },
          "networkSecurityVpcCidr" : { "default" : "Network Security VPC CIDR:" },
          "firewallManagementInterfaceSubnetCidr" : { "default" : "Management Interface CIDR:" },
          "firewallUntrustInterfaceSubnetCidr" : { "default" : "Untrust Interface CIDR:" },
          "firewallTrustInterfaceSubnetCidr" : { "default" : "Trust Interface CIDR:" },
          "firewallManagementGatewaySubnetCidr" : { "default" : "Management Gateway CIDR:" },
          "transitGatewayAttachmentSubnetCidr" : { "default" : "Transit Gateway Attachment CIDR:" },
          "managementTrafficSourceCidr" : { "default" : "Source CIDR for management traffic:" },
          "utmFirewallAMIId": { "default" : "UTM Firewall AMI id:" },
          "firewallManagementBastionAMIId": { "default" : "UTM Firewall Management Bastion AMI id:" },
          "awsKeyPairName": { "default" : "AWS Key Pair Name:" },
          "transitGatewayId": { "default" : "Transit Gateway Id:" },
          "spokeVPCCidrs": { "default" : "List of CIDRs for spoke VPCs attached to the Transit Gateway:" }
        }
      }
    },
	"Parameters" : {
		"TemplatesS3BucketName" : {
			"Type" : "String",
			"Description" : "Enter the name of the S3 bucket containing the UTM Firewall templates and code.",
			"MinLength": 1
		},
		"TemplatesS3BucketPath" : {
			"Type" : "String",
			"Description" : "Enter the prefix within the S3 bucket to the UTM Firewall templates and code; leave blank if the templates and code were copied at the top level of the bucket. Do not include the leading slash for the prefix, but make sure to include a trailing slash."
		},
		"networkSecurityVpcCidr" : {
			"Type" : "String",
			"Description" : "UTM Firewall Network Security VPC CIDR.  If available use the 100.96 CIDR provided by SSC NEUB for integration with SCED.",
			"MinLength": 1
		},
		"firewallManagementInterfaceSubnetCidr" : {
			"Type" : "String",
			"Description" : "UTM Firewall Management Interface Subnet CIDR.  Enter a non-overlapping CIDR within the Network Security VPC CIDR.",
			"MinLength": 1
		},
		"firewallUntrustInterfaceSubnetCidr" : {
			"Type" : "String",
			"Description" : "UTM Firewall Untrust Interface Subnet CIDR.  Enter a non-overlapping CIDR within the Network Security VPC CIDR.",
			"MinLength": 1
		},
		"firewallTrustInterfaceSubnetCidr" : {
			"Type" : "String",
			"Description" : "UTM Firewall Trust Interface Subnet CIDR.  Enter a non-overlapping CIDR within the Network Security VPC CIDR.",
			"MinLength": 1
		},
		"firewallManagementGatewaySubnetCidr" : {
			"Type" : "String",
			"Description" : "UTM Firewall Management Gateway Subnet CIDR.  Enter a non-overlapping CIDR within the Network Security VPC CIDR.",
			"MinLength": 1
		},
		"transitGatewayAttachmentSubnetCidr" : {
			"Type" : "String",
			"Description" : "Transit Gateway Attachment Subnet CIDR.  Enter a non-overlapping CIDR within the Network Security VPC CIDR.",
			"MinLength": 1
		},
		"managementTrafficSourceCidr" : {
			"Type" : "String",
			"Description" : "Enter the source CIDR from which management traffic to the firewall will be allowed.",
			"MinLength": 1
		},
		"utmFirewallAMIId" : {
			"Type" : "String",
			"Description" : "Enter the region specific AMI id of the UTM Firewall.  If this is a Marketplace image, ensure that you have already subscribed to the service through Marketplace.",
			"MinLength": 1
		},
		"firewallManagementBastionAMIId" : {
			"Type" : "String",
			"Description" : "Enter the region specific AMI id to use for the UTM firewall management NAT bastion instance.",
			"MinLength": 1
		},
		"awsKeyPairName" : {
			"Type" : "AWS::EC2::KeyPair::KeyName",
			"Description" : "Select the AWS Key Pair to be used when launching the UTM firewall EC2 instance and the firewall management bastion EC2 instance",
			"MinLength": 1
		},
		"transitGatewayId" : {
			"Type" : "String",
			"Description" : "Enter the id of the existing Transit Gateway to which this UTM Firewall VPC will be attached.",
			"MinLength": 1
		}
	
	},
	"Resources" : {
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns" : [ 
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
                ],
                "Policies" : [
                    {
                        "PolicyName": "CFN-permissions",
                        "PolicyDocument": {
                            "Version" : "2012-10-17",
                            "Statement": [ {
                                "Effect":"Allow",
                                "Action":[
                                    "cloudformation:CreateStack",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:DescribeStackEvents",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:GetTemplate",
                                    "cloudformation:ValidateTemplate"  
                                ],
                                "Resource":"*"
                            } ]
                        }
                    },
                    {
                        "PolicyName": "S3-permissions",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListAllMyBuckets"
                                    ],
                                    "Resource": "arn:aws:s3:::*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket",
                                        "s3:GetBucketLocation"
                                    ],
                                    "Resource": { "Fn::Sub" : "arn:aws:s3:::${TemplatesS3BucketName}" }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:PutObjectAcl",
                                        "s3:GetObject",
                                        "s3:GetObjectAcl",
                                        "s3:DeleteObject"
                                    ],
                                    "Resource": { "Fn::Sub" : "arn:aws:s3:::${TemplatesS3BucketName}/*" }
                                }
                            ]
                        }
                    }
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                }
            }
        },
        "UTMFirewallVPCLambda": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Handler": "lambda_function.lambda_handler",
            "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
            "Code": {
              "S3Bucket": { "Fn::Sub" : "${TemplatesS3BucketName}"},
              "S3Key": { "Fn::Sub" : "${TemplatesS3BucketPath}lambda/utm-firewall-vpc.zip" }
            },
            "Runtime": "python3.6",
            "Timeout": "300",
            "Environment": {
               "Variables": {
                 "templatesBucketName": { "Ref" : "TemplatesS3BucketName" },
                 "templatesBucketPath": { "Ref" : "TemplatesS3BucketPath" },
                 "networkSecurityVpcCidr": { "Ref" : "networkSecurityVpcCidr" },
                 "firewallManagementInterfaceSubnetCidr": { "Ref" : "firewallManagementInterfaceSubnetCidr" },
                 "firewallUntrustInterfaceSubnetCidr": { "Ref" : "firewallUntrustInterfaceSubnetCidr" },
                 "firewallTrustInterfaceSubnetCidr": { "Ref" : "firewallTrustInterfaceSubnetCidr" },
                 "firewallManagementGatewaySubnetCidr": { "Ref" : "firewallManagementGatewaySubnetCidr" },
                 "transitGatewayAttachmentSubnetCidr": { "Ref" : "transitGatewayAttachmentSubnetCidr" },
                 "managementTrafficSourceCidr": { "Ref" : "managementTrafficSourceCidr" },
                 "utmFirewallAMIId": { "Ref" : "utmFirewallAMIId" },
                 "firewallManagementBastionAMIId": { "Ref" : "firewallManagementBastionAMIId" },                 
                 "awsKeyPairName": { "Ref" : "awsKeyPairName" },
                 "transitGatewayId": { "Ref" : "transitGatewayId" }
                 
               }
            }
          }
        },
        "UTMFirewallTransitGatewayAttachmentStep2": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Handler": "lambda_function.lambda_handler",
            "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
            "Code": {
              "S3Bucket": { "Fn::Sub" : "${TemplatesS3BucketName}"},
              "S3Key": { "Fn::Sub" : "${TemplatesS3BucketPath}lambda/utm-firewall-transit-gateway-attachment-step-2.zip" }
            },
            "Runtime": "python3.6",
            "Timeout": "300",
            "Environment": {
               "Variables": {
                 "transitGatewayId": { "Ref" : "transitGatewayId" },
                 "templatesBucketName": { "Ref" : "TemplatesS3BucketName" },
                 "templatesBucketPath": { "Ref" : "TemplatesS3BucketPath" }
               }
            }
          }
        },
        "StatesExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    {
                                        "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                                    }
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "StatesExecutionPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "CreateUTMFirewallStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "DefinitionString": {
                    "Fn::Sub" : ["{\n  \"Comment\": \"Creates the UTM Firewall VPC and transit gateway attachment and routes\",\n  \"StartAt\": \"CreateUTMFirewallVPC\",\n  \"States\": {\n    \"CreateUTMFirewallVPC\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${utmFirewallVPCLambdaArn}\",\n      \"Next\": \"CreateTransitGatewayRoutes\"\n    },\n    \"CreateTransitGatewayRoutes\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${transitGatewayAttachmentLambdaArn}\",\n      \"Next\": \"DidCreateTransitGatewayRoutesFinish\"\n    },\n    \"DidCreateTransitGatewayRoutesFinish\": {\n      \"Type\" : \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.status\",\n          \"StringEquals\": \"Finished\",\n          \"Next\": \"End\"\n        },\n        {\n          \"Variable\": \"$.status\",\n          \"StringEquals\": \"Not Finished\",\n          \"Next\": \"WaitThenRetry\"\n        }\n      ],\n      \"Default\": \"DefaultState\"\n    },\n    \"WaitThenRetry\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 60,\n      \"Next\": \"CreateTransitGatewayRoutes\"\n    },\n    \"DefaultState\": {\n      \"Type\": \"Fail\",\n      \"Error\": \"DefaultStateError\",\n      \"Cause\": \"No Matches!\"\n    },\n    \"End\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}\n",
                    {
                        "utmFirewallVPCLambdaArn": {
                            "Fn::GetAtt": [
                                    "UTMFirewallVPCLambda",
                                    "Arn"
                                ]
                            },
                        "transitGatewayAttachmentLambdaArn": {
                            "Fn::GetAtt": [
                                    "UTMFirewallTransitGatewayAttachmentStep2",
                                    "Arn"
                                ]
                            }
                    }]
                    
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "StatesExecutionRole",
                        "Arn"
                    ]
                }
            }
        }
	}
}